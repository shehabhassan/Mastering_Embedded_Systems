/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

//#if !defined(__SOFT_FP__) && defined(__ARM_FP)
//  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
//#endif

typedef volatile unsigned int vunit_32_t;

#define RCC_Base        0x40021000
#define Offset_APB2     0x18

#define PORTA_Base      0x40010800
#define Offset_CRH      0x04
#define Offset_ODR      0x0C

#define RCC_APB2ENB    *(vunit_32_t *)(RCC_Base   + Offset_APB2)
#define RCC_CRH        *(vunit_32_t *)(PORTA_Base + Offset_CRH)
#define RCC_ODR        *(vunit_32_t *)(PORTA_Base + Offset_ODR)


#define PORTA_SET (1<<2) // bit number 2
#define GPIOA_10  (1UL<<10)



typedef  union{
	 vunit_32_t ALL_BITS;
	 struct{
		 vunit_32_t reserved:9;
		 vunit_32_t PIN10:1;
	 }REG_PINS;
}REG_ABP;

volatile REG_ABP *REG_PORT = RCC_APB2ENB;

int main(void)
{
	RCC_APB2ENB |= PORTA_SET; // SET CLOCK for PORTA
	RCC_CRH &= 0xFF0FFFFF;// 20 to 23 is zero
	RCC_CRH |= 0x00200000;// to make GPIOA Is OUTPUT
 while(1)
	 {
	RCC_ODR |= GPIOA_10;
	for(int i=0;i<5000;i++);
	RCC_ODR &=~ GPIOA_10;
	for(int i=0;i<5000;i++);
	 }
}
